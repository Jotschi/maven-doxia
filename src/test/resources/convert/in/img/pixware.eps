%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/hussein/src/apt/java/fr/pixware/apt/convert/in/img/pixware.eps
%%Creator: XV Version 3.10a  Rev: 12/29/94 (PNG patch 1.2)  -  by John Bradley
%%BoundingBox: 267 411 328 430
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define space for color conversions
/grays 86 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
267 411 translate

% size of image (on paper, in 1/72inch coords)
61.48800 19.29600 scale

% define 'colorimage' if it isn't defined
%   ('colortogray' and 'mergeprocs' come from xwd2ps
%     via xgrab)
/colorimage where   % do we know about 'colorimage'?
  { pop }           % yes: pop off the 'dict' returned
  {                 % no:  define one
    /colortogray {  % define an RGB->I function
      /rgbdata exch store    % call input 'rgbdata'
      rgbdata length 3 idiv
      /npixls exch store
      /rgbindx 0 store
      0 1 npixls 1 sub {
        grays exch
        rgbdata rgbindx       get 20 mul    % Red
        rgbdata rgbindx 1 add get 32 mul    % Green
        rgbdata rgbindx 2 add get 12 mul    % Blue
        add add 64 idiv      % I = .5G + .31R + .18B
        put
        /rgbindx rgbindx 3 add store
      } for
      grays 0 npixls getinterval
    } bind def

    % Utility procedure for colorimage operator.
    % This procedure takes two procedures off the
    % stack and merges them into a single procedure.

    /mergeprocs { % def
      dup length
      3 -1 roll
      dup
      length
      dup
      5 1 roll
      3 -1 roll
      add
      array cvx
      dup
      3 -1 roll
      0 exch
      putinterval
      dup
      4 2 roll
      putinterval
    } bind def

    /colorimage { % def
      pop pop     % remove 'false 3' operands
      {colortogray} mergeprocs
      image
    } bind def
  } ifelse          % end of 'false' case



% define the colormap
/cmap 18 string def


% load up the colormap
currentfile cmap readhexstring
000000 bf0000 c0c0c0 808080 ff0000 ffffff 
pop pop   % lose return values from readhexstring


% rlecmapimage expects to have 'w h bits matrix' on stack
/rlecmapimage {
  /buffer 1 string def
  /rgbval 3 string def
  /block  384 string def

  % proc to read a block from file, and return RGB data
  { currentfile buffer readhexstring pop
    /bcount exch 0 get store
    bcount 128 ge
    {  % it's a non-run block
      0 1 bcount 128 sub
      { currentfile buffer readhexstring pop pop

        % look up value in color map
        /rgbval cmap buffer 0 get 3 mul 3 getinterval store

        % and put it in position i*3 in block
        block exch 3 mul rgbval putinterval
      } for
      block  0  bcount 127 sub 3 mul  getinterval
    }

    { % else it's a run block
      currentfile buffer readhexstring pop pop

      % look up value in colormap
      /rgbval cmap buffer 0 get 3 mul 3 getinterval store

      0 1 bcount { block exch 3 mul rgbval putinterval } for

      block 0 bcount 1 add 3 mul getinterval
    } ifelse
  } % end of proc
  false 3 colorimage
} bind def


86 27 8			% dimensions of data
[86 0 0 -27 0 27]		% mapping matrix
rlecmapimage

5500
5500
5500
840001040204810402820204028202040201028104028102000100860402040205020082
0004028202010202020300830102040202028101002300
010082020402880204020502050402040304810200010002028104000200860205040105
040004008104028402050204002400
010086040502040204028202040288020502050205040100850001020502000200810405
820502058105000400810205810502820201002400
010081020483040502040104830205020402048302040200820002040104040082040504
01040500850402050401002500
010082010204010403018102010101040401000102010404008402040204028102000200
8204020483040301002500
010082040502010207008502040205020085000405040200040081010283020405028202
040282020502820201002600
010001028304050200060081020483040204008500040204020005008202040581050487
040501040502010081000281020081000201020100010283050003028102000200050201
0081030204020300
010083040204028102000600010283050405008100028102048104000600820204020502
810300010082020500850002050200058205020084000205020002008202050201028305
02000581050203020300
010085020102040201030188020102040204020500820004028202040007008802040204
010402010002008203050381030585050200020500010081020582050300010001020200
86020500030503000600
010084010204020481040201020104810104010402020100020281040007000104820205
028202040004008905020305020503020500860002050005020001008105020402810005
010502020400
010081010282020402810204820401040204810504830402010085000405040200070083
010201048304020400040082020502860200050205020081000284020002050001008302
050205860502030003050201028103000300
010001028301040204010489020502040204020401000100810402010208008104028302
040204810400040081030584050200020581050082000305030581020087000502000305
0200810005820503000600
010001020101820402018201020185010205020100030001048202040006008102048304
020402810204810400040001050100830305020084000205030081000281020081000281
0200870002050300030502820203028102000200
01008201050201020e008202050481040005008102048904050402050402050200030082
020500860003050200030281020001008602050200050200010084050200030504050300

010081020401048105000d00010282010500040082040204830402040181010403042800

010081010401048102000d00810204010405000104830504020002008204050482040200
2600
0100850204010402000d0001058204010003000404810200020004042700
0100850204020402000d0084020504020002008201020481040281020004008204020482
0402002500
010001028104018101000d00810402820204000200820204028302040200040086020405
020502002400
0100850102040102000d0082040204810400020081020484040204020004008102048204
02048104002400
820001040204820201000b00810204840405040500810004820402048104020102810100
850001020402048404020402002300
5500
5500
5500

%
% Compression made this file 18.13% of the uncompressed size.
%


showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer
